on:
  push:
    tags:
    - 'v*'
    - 'ci-test'

name: release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url
  pkg-tar:
    name: Create TAR Archive
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Release TAR
      id: tar
      run: |
        VERSION="${GITHUB_REF:11}"
        echo "::set-output name=version::$VERSION"
        mkdir -p $GITHUB_WORKSPACE/target
        tar -c --exclude-vcs-ignores -zvf $GITHUB_WORKSPACE/target/ovgu-canteen-gtk-$VERSION.tgz .
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      run: |
        value=`cat release_url/release_url`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: target/ovgu-canteen-gtk-${{ steps.tar.outputs.version }}.tgz
        asset_name: ovgu-canteen-gtk-${{ steps.tar.outputs.version }}.tgz
        asset_content_type: application/gzip
